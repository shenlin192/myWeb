$pi: 3.14159265359;
$_precision: 10;

@function pow($base, $exp) {
    $value: $base;
    @if $exp > 1 {
        @for $i from 2 through $exp {
            $value: $value * $base;
        }
    }
    @if $exp < 1{
        @for $i from 0 through -$exp {
            $value: $value / $base;
        }
    }
    @return $value;
}

@function fact($num) {
    $fact: 1;
    @if $num > 0{
        @for $i from 1 through $num {
            $fact: $fact * $i;
        }
    }
    @return $fact;
}

@function _to_unitless_rad($angle) {
    @if unit($angle) == "deg" {
        $angle: $angle / 180deg * $pi;
    }
    @if unit($angle) == "rad" {
        $angle: $angle / 1rad;
    }
    @return $angle;
}

@function sin($angle){
    $a: _to_unitless_rad($angle);
    $sin: $a;
    @for $n from 1 through $_precision {
        $sin: $sin + (pow(-1, $n) / fact(2 * $n + 1) ) * pow($a, (2 * $n + 1));
    }
    @return $sin;
}

@function cos($angle){
    $a: _to_unitless_rad($angle);
    $cos: 1;
    @for $n from 1 through $_precision {
        $cos: $cos + ( pow(-1,$n) / fact(2*$n) ) * pow($a,2*$n);
    }
    @return $cos;
}

@function tan($angle){
    @return sin($angle) / cos($angle);
}


//vars
$fg:#1097d5;
$bg:#8bc34a;
$pi:3.14;

//config
$menu-items:6+1;
$open-distance:105px;
$opening-angle:$pi*2;

a{
    color:inherit;
}

%goo{
    filter:url('#shadowed-goo');
}
%ball{
    background:$fg;
    border-radius:100%;
    width:90px;
    height:90px;
    margin-left:-45px;
    margin-top:-45px;
    position:absolute;
    top:50%;
    left:50%;
    color:white;
    text-align:center;
    line-height:90px;
    transform:translate3d(0,0,0);
    transition:transform ease-out 200ms;
}
.menu-open{
    display:none;
}
.menu-item{
    @extend %ball;
}
.hamburger{
    $width:25px;
    $height:3px;
    width:$width;
    height:$height;
    background:white;
    display:block;
    position:absolute;
    top:50%;
    left:50%;
    margin-left:-$width/2;
    margin-top:-$height/2;
    transition:transform 200ms;
}
$hamburger-spacing:8px;
.hamburger-1{
    transform:translate3d(0,-$hamburger-spacing,0);
}
.hamburger-2{
    transform:translate3d(0,0,0);
}
.hamburger-3{
    transform:translate3d(0,$hamburger-spacing,0);
}
.menu-open:checked+.menu-open-button{
    .hamburger-1{
        transform:translate3d(0,0,0) rotate(45deg);
    }
    .hamburger-2{
        transform:translate3d(0,0,0) scale(0.1,1);
    }
    .hamburger-3{
        transform:translate3d(0,0,0) rotate(-45deg);
    }
}
.menu{
    @extend %goo;
    opacity: 0;
    display: none;
    position: fixed;
    top: 50%;
    left: 50%;
    width: 380px;
    height: 280px;
    margin-left: -190px;
    margin-top: -140px;
}


.menu-item{
    display: flex;
    flex-direction: column;
    i{
        flex: 1;
        display: flex;
        justify-content: flex-end;
        flex-direction: column;
        text-align: center;
    }
    span{
        flex: 1;
        display: flex;
        flex-direction: column;
        text-align: center;
        line-height: 20px;
        font-size: 14px;
    }
    &:hover{
        background:white;
        color:$fg;
        text-decoration: none;
        //span{
        //    display: inline-block;
        //}
        //i{
        //    display: none;
        //}
    }
    @for $i from 1 through $menu-items{
        &:nth-child(#{$i+2}){
            transition-duration:180ms;
        }
    }
}

.menu-open-button{
    @extend %ball;
    z-index:2;
    transition-timing-function:cubic-bezier(0.175, 0.885, 0.320, 1.275);
    transition-duration:400ms;
    transform:scale(1.1,1.1) translate3d(0,0,0);
    cursor:pointer;
}
.menu-open-button:hover{
    transform:scale(1.2,1.2) translate3d(0,0,0);
}
.menu-open:checked+.menu-open-button{
    transition-timing-function:linear;
    transition-duration:200ms;
    transform:scale(0.8,0.8) translate3d(0,0,0);
}

.menu-open:checked~.menu-item{
    transition-timing-function:cubic-bezier(0.935, 0.000, 0.340, 1.330);
    @for $i from 1 through $menu-items{
        $angle:(($pi - $opening-angle)/2)+(($opening-angle/($menu-items - 1))*($i - 1));

        &:nth-child(#{$i+2}){
            transition-duration:80ms+(100ms*$i);
            transform:translate3d(cos($angle)*$open-distance,sin($angle)*$open-distance,0);
        }
    }
}
